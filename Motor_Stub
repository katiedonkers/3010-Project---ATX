//motor set up
#include <Stepper.h>
int startStop; //to start the measuring process
const long strapLength = 150; //temp length 
long lengthBlue;              //calculated length 
long lengthGreen;             // calculated length 
const long distanceStep = 5; //temp length
const int stepsPerRevolution = 200;   //step size
Stepper myBlueStepper(stepsPerRevolution, 0, 2, 1, 3); //middle pins inversed to allow movement in either direction
Stepper myGreenStepper(stepsPerRevolution, 4, 6, 5, 7); 
int stepTakenGreen = 0;               //number of steps taken
int stepTakenBlue = 0;
//Button Pins
const int buttonGreen = 8;          //setting pins to parts
const int buttonBlue = 9; 
void setup() {
  pinMode(buttonGreen, INPUT);
  pinMode(buttonBlue, INPUT);  
  myBlueStepper.setSpeed(60);     //set motor speed 
  myGreenStepper.setSpeed(60); 
  digitalWrite(buttonGreen,LOW);  //initialize button pins to low 
  digitalWrite(buttonBlue,LOW);
  Serial.begin(9600);
}
void loop() {
    if(Serial.available()){             //waiting on the pi so start process
    startStop = Serial.read();            //start pi
  }
 if(startStop == 1) {         //only starts when pi says to 
  int countB = 0;
  int countG = 0; 
  while(digitalRead(buttonBlue)!=HIGH && digitalRead(buttonGreen)!=HIGH){   //run stepper motors till tightened
    if(digitalRead(buttonBlue)!=HIGH){                  //run blue stepper
    myBlueStepper.step(stepsPerRevolution);
    stepTakenBlue++;
    delay(250);
    }
    if(digitalRead(buttonGreen)!=HIGH){                 //run green stepper 
    myGreenStepper.step(stepsPerRevolution);
    stepTakenGreen++;
    delay(250);
    }
    if(countB==5){
      digitalWrite(buttonBlue, HIGH);
    }
    if(countG==7){
      digitalWrite(buttonGreen, HIGH);
    }
  }
  lengthCalc();                           //calculates length of both circomference 
  Serial.println(lengthBlue);             //sends info back to pi that is waiting
  Serial.println(lengthGreen);
   startStop = 0; 
}
